class Solution{
    public:
    //Function to find minimum number of operations that are required 
    //to make the matrix beautiful.
    int findMinOpeartion(vector<vector<int>> arr, int n)
    {
    int rowSum[n];
	int colSum[n];
	
	int mx=0;
	for(int i=0;i<n;i++){
		int sum1=0;
		for(int j=0;j<n;j++){
			sum1+=arr[i][j];
			rowSum[i]=sum1;
		}
		mx=max(sum1,mx);
	}
	for(int i=0;i<n;i++){
    	int sum2=0;
		for(int j=0;j<n;j++){
			sum2+=arr[j][i];
			colSum[i]=sum2;
		}
		mx=max(sum2,mx);
	}
	
	int a=0; int b=0;
	for(int i=0;i<n;i++){
		rowSum[i]=mx-rowSum[i];
		a+=rowSum[i];
		colSum[i]=mx-colSum[i];
		b+=rowSum[i]; 
	}
	return (a+b)/2;
  }
};
